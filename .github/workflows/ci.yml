name: CI FastAPI

on: pull_request

env:
  python_version: 3.9
  # Variables used to configure
  IMAGE_REGISTRY: ghcr.io
  IMAGE_REPO: fast-api-lab
  IMAGE_NAME: fast-api
  VERSION: develop

jobs:

  flake8:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Lint with flake8
      run: |
        pip install flake8 flake8-html
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        mkdir -p reports/flake8
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics --format=html --htmldir=reports/flake8
    - name: Archive flake8 coverage results
      uses: actions/upload-artifact@v2
      with:
        name: flake8-coverage-report
        path: reports/flake8/

  pytest:
    name: Unit Testing
    needs: flake8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov pytest-html pytest-sugar pytest-json-report
        pytest -v --cov --html=reports/pytest/report.html
    - name: Archive pytest coverage results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-coverage-report
        path: reports/pytest/

  docker_ci:
    name: Build & Push Image
    needs: pytest
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to in GHCR
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Build and Push
        run: | 
          IMAGE=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          IMAGE_LATEST=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME }}::latest
          docker build -t $IMAGE -t $IMAGE_LATEST .
          docker push $IMAGE
	        docker push $IMAGE_LATEST

#      - name: Image digest
#        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Print Public IP
        run: |
          echo ${{ steps.ip.outputs.ipv4 }}
          echo ${{ steps.ip.outputs.ipv6 }}
          
      - name: Docker Run
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: gcr.io
          image: fast-api:latest
          run: echo "hello world"